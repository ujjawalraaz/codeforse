
/****************************************************
             code from scratch...
      coded by ujjawal_singh on dated 18/10/2019
     
***************************************************** */
  
#include<bits/stdc++.h>
#include<iostream>
#define ll long long int
#define ip(n) cin>>n;
#define ipn() ll n;ip(n);ll arr[n];for(int i=0;i<n;i++)ip(arr[i])
#define fo(i, a, b) for (int i = (a); i < int(b); i++)
#define rep(i, n) fo(i, 0, n)
#define pr1(n) cout<<n<<endl
#define pr2(a,b) cout<<a<<" "<<b<<endl
#define fast ios_base::sync_with_stdio(false), cin.tie(NULL)
#define mem(arr,i) memset(arr,i,sizeof(arr))
using namespace std;
ll M=1000000007;
ll n;
void build()
{
    
}

ll modularExponentiation(ll x,ll n)
{
    if(n==0)
        return 1;
    else if(n%2 == 0)        //n is even
        return modularExponentiation((x*x)%M,n/2);
    else                             //n is odd
        return (x*modularExponentiation((x*x)%M,(n-1)/2))%M;
}

int main()
{
   ll n,m;
   ip(n);
   ip(m);
   ll res=modularExponentiation(2,m);
   res--;
   ll res1=modularExponentiation(res,n);
   res1=res1%M;
   pr1(res1);
   return(0);
}
